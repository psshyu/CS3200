% mymultnewton
clear all;

n = 8;  % set some number of iterations , may need adjusting

% initial values for iteration
%x = 1.0;
%y = 0.1;
x0 = [1.0; 0.1];
x_values = zeros(2,n);
x_values(1,1) = 1.0;
x_values(2,1) = 0.1;
% pair of equations to solve
% from here on out, x = x1 and y = x2 in the assignment
syms x y;               % create the symbols for functions
%f1 = @(x,y) (x^3+y-1);  % f1
%f2 = @(x,y) (y^3-x-1);  % f2
%f1 = @(x,y) (x^3+y-1);
%f1 = @(x,y) (x^3+y-1);
a = matlabFunction(diff(f1(x,y),x)); % df1_dx
b = matlabFunction(diff(f2(x,y),x)); % df2_dx = -1
c = matlabFunction(diff(f1(x,y),y)); % df1_dy = 1
d = matlabFunction(diff(f2(x,y),y)); % df2_dy

det = matlabFunction(a(x)*d(y)-b()*c());
dx = matlabFunction(-(d(y)*f1(x,y)-c()*f2(x,y))/det(x,y));
dy = matlabFunction(-(-1*b()*f1(x,y)+a(x)*f2(x,y))/det(x,y));

for i = 1:n
    x = x_values(:,i);
    %y = x_values(2,i);
    a_val = a(x(1),x(2));
end

%$x_ = x1 + dx(x1,x2);
%y_ = x2 + dy(x1,x2);

% starting guess